language: cpp
dist: xenial
env:
matrix:
    fast_finish: true
    include:
      - os: linux
        addons:
            apt:
                sources:
                    - ubuntu-toolchain-r-test
                packages:
                    - g++-7
        env: COMPILER=gcc GCC=7 XSIMD=ON
      - os: linux
        addons:
            apt:
                sources:
                    - ubuntu-toolchain-r-test
                packages:
                    - g++-8
        env: COMPILER=gcc GCC=8 XSIMD=ON
      - os: linux
        addons:
            apt:
                sources:
                    - ubuntu-toolchain-r-test
                    - llvm-toolchain-xenial-6.0
                packages:
                    - clang-6.0
        env: COMPILER=clang CLANG=6.0 XSIMD=ON
      - os: osx
        osx_image: xcode8
        compiler: clang
        env: XSIMD=ON
env:
    global:
        - MINCONDA_VERSION="latest"
        - MINCONDA_LINUX="Linux-x86_64"
        - MINCONDA_OSX="MacOSX-x86_64"
before_install:
        - |
            # Configure build variables
            if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
                if [[ "$COMPILER" == "gcc" ]]; then
                    export CXX=g++-$GCC CC=gcc-$GCC;
                fi
                if [[ "$COMPILER" == "clang" ]]; then
                    export CXX=clang++-$CLANG CC=clang-$CLANG;
                fi
            elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
                export CXX=clang++ CC=clang;
            fi
install:
    # Set environment using Conda
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
            MINCONDA_OS=$MINCONDA_LINUX;
        elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
            MINCONDA_OS=$MINCONDA_OSX;
        fi
    - wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    - conda install -c conda-forge mamba
    - mamba install -c conda-forge cmake xtensor qpot python-qpot xsimd python numpy pyxtensor catch2 h5py
    # Build/install the library
    - cmake . -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON -DXSIMD=$XSIMD
    - make
    - sudo make install
    - python setup.py build
    - python setup.py install
script:
    # Run tests
    - ./test/main
    - python test/Cartesian2d.py
    - python test/compare_versions/Cartesian2d_generate.py
    - python test/compare_versions/Cartesian2d_check_master.py
    - mamba install -c conda-forge python-gmatelastoplasticqpot=0.6.3
    - python test/compare_versions/Cartesian2d_check_v0.6.3.py
    - mamba install -c conda-forge python-gmatelastoplasticqpot=0.5.0
    - python test/compare_versions/Cartesian2d_check_v0.5.0.py
    - mamba install -c conda-forge python-gmatelastoplasticqpot=0.4.0
    - python test/compare_versions/Cartesian2d_check_v0.4.0.py
    - mamba install -c conda-forge python-gmatelastoplasticqpot=0.3.0
    - python test/compare_versions/Cartesian2d_check_v0.3.0.py
    - mamba install -c conda-forge python-gmatelastoplasticqpot=0.2.2
    - python test/compare_versions/Cartesian2d_check_v0.2.2.py
